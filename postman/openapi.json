{
  "openapi": "3.1.0",
  "info": {
    "title": "Neubit",
    "description": "A production-ready user management system built with FastAPI",
    "version": "1.0.0"
  },
  "paths": {
    "/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Health check",
        "description": "Check the health status of the application and its dependencies.",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    },
    "/health/db": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Database health check",
        "description": "Check the health status of the database connection.",
        "operationId": "database_health_check_health_db_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    },
    "/health/ready": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Readiness check",
        "description": "Check if the application is ready to serve requests.",
        "operationId": "readiness_check_health_ready_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    },
    "/health/live": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Liveness check",
        "description": "Check if the application is alive and running.",
        "operationId": "liveness_check_health_live_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register a new user",
        "description": "Register a new user account. An email verification will be sent.",
        "operationId": "register_api_v1_auth_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "User login",
        "description": "Authenticate user and return access and refresh tokens.",
        "operationId": "login_api_v1_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/refresh": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Refresh access token",
        "description": "Get a new access token using refresh token.",
        "operationId": "refresh_token_api_v1_auth_refresh_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/verify-email": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Verify email address",
        "description": "Verify user email address using verification token.",
        "operationId": "verify_email_api_v1_auth_verify_email_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailVerificationConfirm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/resend-verification": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Resend verification email",
        "description": "Resend email verification to user.",
        "operationId": "resend_verification_api_v1_auth_resend_verification_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailVerificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/forgot-password": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Request password reset",
        "description": "Request a password reset email.",
        "operationId": "forgot_password_api_v1_auth_forgot_password_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/reset-password": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Reset password",
        "description": "Reset password using reset token.",
        "operationId": "reset_password_api_v1_auth_reset_password_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetConfirm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/change-password": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Change password",
        "description": "Change user password (requires authentication).",
        "operationId": "change_password_api_v1_auth_change_password_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/auth/me": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get current user",
        "description": "Get current authenticated user information.",
        "operationId": "get_current_user_info_api_v1_auth_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/users/profile": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user profile",
        "description": "Get current user's profile information.",
        "operationId": "get_profile_api_v1_users_profile_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update user profile",
        "description": "Update current user's profile information.",
        "operationId": "update_profile_api_v1_users_profile_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user account",
        "description": "Delete current user's account.",
        "operationId": "delete_account_api_v1_users_profile_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List users (Admin)",
        "description": "Get a list of users with filtering and pagination. Requires superuser privileges.",
        "operationId": "list_users_api_v1_users__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of records to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of records to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Number of records to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Number of records to return"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search in email, username, first name, or last name",
              "title": "Search"
            },
            "description": "Search in email, username, first name, or last name"
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by active status",
              "title": "Is Active"
            },
            "description": "Filter by active status"
          },
          {
            "name": "is_verified",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by verification status",
              "title": "Is Verified"
            },
            "description": "Filter by verification status"
          },
          {
            "name": "is_superuser",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by superuser status",
              "title": "Is Superuser"
            },
            "description": "Filter by superuser status"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{user_id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user by ID (Admin)",
        "description": "Get a specific user by ID. Requires superuser privileges.",
        "operationId": "get_user_api_v1_users__user_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update user (Admin)",
        "description": "Update a specific user. Requires superuser privileges.",
        "operationId": "update_user_api_v1_users__user_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAdminUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user (Admin)",
        "description": "Delete a specific user. Requires superuser privileges.",
        "operationId": "delete_user_api_v1_users__user_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/stats/overview": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user statistics (Admin)",
        "description": "Get user statistics overview. Requires superuser privileges.",
        "operationId": "get_user_stats_api_v1_users_stats_overview_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/roles/permissions": {
      "post": {
        "tags": [
          "Roles & Permissions"
        ],
        "summary": "Create permission (Admin)",
        "description": "Create a new permission. Requires superuser privileges.",
        "operationId": "create_permission_api_v1_roles_permissions_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Roles & Permissions"
        ],
        "summary": "List permissions (Admin)",
        "description": "Get a list of permissions with filtering and pagination. Requires superuser privileges.",
        "operationId": "list_permissions_api_v1_roles_permissions_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of records to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of records to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Number of records to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Number of records to return"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search in name, codename, or description",
              "title": "Search"
            },
            "description": "Search in name, codename, or description"
          },
          {
            "name": "resource",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by resource",
              "title": "Resource"
            },
            "description": "Filter by resource"
          },
          {
            "name": "action",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by action",
              "title": "Action"
            },
            "description": "Filter by action"
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by active status",
              "title": "Is Active"
            },
            "description": "Filter by active status"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/roles/permissions/{permission_id}": {
      "get": {
        "tags": [
          "Roles & Permissions"
        ],
        "summary": "Get permission by ID (Admin)",
        "description": "Get a specific permission by ID. Requires superuser privileges.",
        "operationId": "get_permission_api_v1_roles_permissions__permission_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "permission_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Permission Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Roles & Permissions"
        ],
        "summary": "Update permission (Admin)",
        "description": "Update a specific permission. Requires superuser privileges.",
        "operationId": "update_permission_api_v1_roles_permissions__permission_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "permission_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Permission Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Roles & Permissions"
        ],
        "summary": "Delete permission (Admin)",
        "description": "Delete a specific permission. Requires superuser privileges.",
        "operationId": "delete_permission_api_v1_roles_permissions__permission_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "permission_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Permission Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/roles/": {
      "post": {
        "tags": [
          "Roles & Permissions"
        ],
        "summary": "Create role (Admin)",
        "description": "Create a new role with permissions. Requires superuser privileges.",
        "operationId": "create_role_api_v1_roles__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Roles & Permissions"
        ],
        "summary": "List roles (Admin)",
        "description": "Get a list of roles with filtering and pagination. Requires superuser privileges.",
        "operationId": "list_roles_api_v1_roles__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of records to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of records to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Number of records to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Number of records to return"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search in name or description",
              "title": "Search"
            },
            "description": "Search in name or description"
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by active status",
              "title": "Is Active"
            },
            "description": "Filter by active status"
          },
          {
            "name": "is_default",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by default status",
              "title": "Is Default"
            },
            "description": "Filter by default status"
          },
          {
            "name": "is_system",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by system status",
              "title": "Is System"
            },
            "description": "Filter by system status"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/roles/{role_id}": {
      "get": {
        "tags": [
          "Roles & Permissions"
        ],
        "summary": "Get role by ID (Admin)",
        "description": "Get a specific role by ID. Requires superuser privileges.",
        "operationId": "get_role_api_v1_roles__role_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Role Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Roles & Permissions"
        ],
        "summary": "Update role (Admin)",
        "description": "Update a specific role. Requires superuser privileges.",
        "operationId": "update_role_api_v1_roles__role_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Role Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Roles & Permissions"
        ],
        "summary": "Delete role (Admin)",
        "description": "Delete a specific role. Requires superuser privileges.",
        "operationId": "delete_role_api_v1_roles__role_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Role Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/roles/assign": {
      "post": {
        "tags": [
          "Roles & Permissions"
        ],
        "summary": "Assign roles to user (Admin)",
        "description": "Assign roles to a user (replaces existing roles). Requires superuser privileges.",
        "operationId": "assign_user_roles_api_v1_roles_assign_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRoleAssignment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/roles/bulk-assign": {
      "post": {
        "tags": [
          "Roles & Permissions"
        ],
        "summary": "Bulk assign roles (Admin)",
        "description": "Bulk assign/remove roles to/from multiple users. Requires superuser privileges.",
        "operationId": "bulk_assign_roles_api_v1_roles_bulk_assign_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkRoleAssignment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/roles/check-permission": {
      "post": {
        "tags": [
          "Roles & Permissions"
        ],
        "summary": "Check user permission (Admin)",
        "description": "Check if a user has a specific permission. Requires superuser privileges.",
        "operationId": "check_user_permission_api_v1_roles_check_permission_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPermissionCheck"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPermissionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/roles/stats/overview": {
      "get": {
        "tags": [
          "Roles & Permissions"
        ],
        "summary": "Get role statistics (Admin)",
        "description": "Get role and permission statistics overview. Requires superuser privileges.",
        "operationId": "get_role_stats_api_v1_roles_stats_overview_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/": {
      "get": {
        "tags": [
          "Root"
        ],
        "summary": "Root",
        "description": "Root endpoint.",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BulkRoleAssignment": {
        "properties": {
          "user_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "minItems": 1,
            "title": "User Ids",
            "description": "List of user IDs"
          },
          "role_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "minItems": 1,
            "title": "Role Ids",
            "description": "List of role IDs to assign"
          },
          "operation": {
            "type": "string",
            "pattern": "^(add|remove|replace)$",
            "title": "Operation",
            "description": "Operation type: add, remove, or replace"
          }
        },
        "type": "object",
        "required": [
          "user_ids",
          "role_ids",
          "operation"
        ],
        "title": "BulkRoleAssignment",
        "description": "Bulk role assignment schema.",
        "example": {
          "operation": "add",
          "role_ids": [
            "789e0123-e89b-12d3-a456-426614174002"
          ],
          "user_ids": [
            "123e4567-e89b-12d3-a456-426614174000",
            "456e7890-e89b-12d3-a456-426614174001"
          ]
        }
      },
      "ChangePasswordRequest": {
        "properties": {
          "current_password": {
            "type": "string",
            "title": "Current Password",
            "description": "Current password"
          },
          "new_password": {
            "type": "string",
            "minLength": 8,
            "title": "New Password",
            "description": "New password"
          },
          "confirm_password": {
            "type": "string",
            "minLength": 8,
            "title": "Confirm Password",
            "description": "Password confirmation"
          }
        },
        "type": "object",
        "required": [
          "current_password",
          "new_password",
          "confirm_password"
        ],
        "title": "ChangePasswordRequest",
        "description": "Change password request schema.",
        "example": {
          "confirm_password": "newsecurepassword123",
          "current_password": "currentpassword123",
          "new_password": "newsecurepassword123"
        }
      },
      "EmailVerificationConfirm": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token",
            "description": "Email verification token"
          }
        },
        "type": "object",
        "required": [
          "token"
        ],
        "title": "EmailVerificationConfirm",
        "description": "Email verification confirmation schema.",
        "example": {
          "token": "verification_token_here"
        }
      },
      "EmailVerificationRequest": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "description": "User email address"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "EmailVerificationRequest",
        "description": "Email verification request schema.",
        "example": {
          "email": "user@example.com"
        }
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "LoginRequest": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "description": "User email address"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "title": "Password",
            "description": "User password"
          }
        },
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "title": "LoginRequest",
        "description": "Login request schema.",
        "example": {
          "email": "user@example.com",
          "password": "securepassword123"
        }
      },
      "MessageResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Response message"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "MessageResponse",
        "description": "Generic message response schema.",
        "example": {
          "message": "Operation completed successfully"
        }
      },
      "PasswordResetConfirm": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token",
            "description": "Password reset token"
          },
          "new_password": {
            "type": "string",
            "minLength": 8,
            "title": "New Password",
            "description": "New password"
          },
          "confirm_password": {
            "type": "string",
            "minLength": 8,
            "title": "Confirm Password",
            "description": "Password confirmation"
          }
        },
        "type": "object",
        "required": [
          "token",
          "new_password",
          "confirm_password"
        ],
        "title": "PasswordResetConfirm",
        "description": "Password reset confirmation schema.",
        "example": {
          "confirm_password": "newsecurepassword123",
          "new_password": "newsecurepassword123",
          "token": "reset_token_here"
        }
      },
      "PasswordResetRequest": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "description": "User email address"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "PasswordResetRequest",
        "description": "Password reset request schema.",
        "example": {
          "email": "user@example.com"
        }
      },
      "PermissionCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name",
            "description": "Permission name"
          },
          "codename": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Codename",
            "description": "Permission codename"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Permission description"
          },
          "resource": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "Resource",
            "description": "Resource name"
          },
          "action": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "Action",
            "description": "Action name"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Permission active status",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "name",
          "codename",
          "resource",
          "action"
        ],
        "title": "PermissionCreate",
        "description": "Permission creation schema.",
        "example": {
          "action": "create",
          "codename": "user.create",
          "description": "Permission to create new users",
          "is_active": true,
          "name": "Create User",
          "resource": "user"
        }
      },
      "PermissionListResponse": {
        "properties": {
          "permissions": {
            "items": {
              "$ref": "#/components/schemas/PermissionResponse"
            },
            "type": "array",
            "title": "Permissions",
            "description": "List of permissions"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of permissions"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page",
            "description": "Number of permissions per page"
          },
          "pages": {
            "type": "integer",
            "title": "Pages",
            "description": "Total number of pages"
          }
        },
        "type": "object",
        "required": [
          "permissions",
          "total",
          "page",
          "per_page",
          "pages"
        ],
        "title": "PermissionListResponse",
        "description": "Permission list response schema."
      },
      "PermissionResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name",
            "description": "Permission name"
          },
          "codename": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Codename",
            "description": "Permission codename"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Permission description"
          },
          "resource": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "Resource",
            "description": "Resource name"
          },
          "action": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "Action",
            "description": "Action name"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Permission active status",
            "default": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Permission ID"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          }
        },
        "type": "object",
        "required": [
          "name",
          "codename",
          "resource",
          "action",
          "id",
          "created_at"
        ],
        "title": "PermissionResponse",
        "description": "Permission response schema.",
        "example": {
          "action": "create",
          "codename": "user.create",
          "created_at": "2023-01-01T00:00:00Z",
          "description": "Permission to create new users",
          "id": "123e4567-e89b-12d3-a456-426614174000",
          "is_active": true,
          "name": "Create User",
          "resource": "user",
          "updated_at": "2023-01-02T00:00:00Z"
        }
      },
      "PermissionUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Permission name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Permission description"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "Permission active status"
          }
        },
        "type": "object",
        "title": "PermissionUpdate",
        "description": "Permission update schema.",
        "example": {
          "description": "Updated permission description",
          "is_active": true,
          "name": "Updated Permission Name"
        }
      },
      "RefreshTokenRequest": {
        "properties": {
          "refresh_token": {
            "type": "string",
            "title": "Refresh Token",
            "description": "JWT refresh token"
          }
        },
        "type": "object",
        "required": [
          "refresh_token"
        ],
        "title": "RefreshTokenRequest",
        "description": "Refresh token request schema.",
        "example": {
          "refresh_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
        }
      },
      "RegisterRequest": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "description": "User email address"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "title": "Password",
            "description": "User password"
          },
          "confirm_password": {
            "type": "string",
            "minLength": 8,
            "title": "Confirm Password",
            "description": "Password confirmation"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name",
            "description": "First name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name",
            "description": "Last name"
          },
          "username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "minLength": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Username",
            "description": "Username"
          }
        },
        "type": "object",
        "required": [
          "email",
          "password",
          "confirm_password"
        ],
        "title": "RegisterRequest",
        "description": "Registration request schema.",
        "example": {
          "confirm_password": "securepassword123",
          "email": "user@example.com",
          "first_name": "John",
          "last_name": "Doe",
          "password": "securepassword123",
          "username": "johndoe"
        }
      },
      "RoleCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "Name",
            "description": "Role name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Role description"
          },
          "is_default": {
            "type": "boolean",
            "title": "Is Default",
            "description": "Default role for new users",
            "default": false
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Role active status",
            "default": true
          },
          "priority": {
            "type": "integer",
            "maximum": 100,
            "minimum": 0,
            "title": "Priority",
            "description": "Role priority (0-100)",
            "default": 0
          },
          "permission_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Permission Ids",
            "description": "List of permission IDs",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "RoleCreate",
        "description": "Role creation schema.",
        "example": {
          "description": "Can edit content but not manage users",
          "is_active": true,
          "is_default": false,
          "name": "Editor",
          "permission_ids": [
            "123e4567-e89b-12d3-a456-426614174000",
            "456e7890-e89b-12d3-a456-426614174001"
          ],
          "priority": 20
        }
      },
      "RoleListResponse": {
        "properties": {
          "roles": {
            "items": {
              "$ref": "#/components/schemas/RoleResponse"
            },
            "type": "array",
            "title": "Roles",
            "description": "List of roles"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of roles"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page",
            "description": "Number of roles per page"
          },
          "pages": {
            "type": "integer",
            "title": "Pages",
            "description": "Total number of pages"
          }
        },
        "type": "object",
        "required": [
          "roles",
          "total",
          "page",
          "per_page",
          "pages"
        ],
        "title": "RoleListResponse",
        "description": "Role list response schema."
      },
      "RoleResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "Name",
            "description": "Role name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Role description"
          },
          "is_default": {
            "type": "boolean",
            "title": "Is Default",
            "description": "Default role for new users",
            "default": false
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Role active status",
            "default": true
          },
          "priority": {
            "type": "integer",
            "maximum": 100,
            "minimum": 0,
            "title": "Priority",
            "description": "Role priority (0-100)",
            "default": 0
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Role ID"
          },
          "is_system": {
            "type": "boolean",
            "title": "Is System",
            "description": "System role (cannot be deleted)"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "permissions": {
            "items": {
              "$ref": "#/components/schemas/PermissionResponse"
            },
            "type": "array",
            "title": "Permissions",
            "description": "Role permissions",
            "default": []
          },
          "user_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Count",
            "description": "Number of users with this role"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "is_system",
          "created_at"
        ],
        "title": "RoleResponse",
        "description": "Role response schema.",
        "example": {
          "created_at": "2023-01-01T00:00:00Z",
          "description": "Can edit content but not manage users",
          "id": "123e4567-e89b-12d3-a456-426614174000",
          "is_active": true,
          "is_default": false,
          "is_system": false,
          "name": "Editor",
          "permissions": [],
          "priority": 20,
          "updated_at": "2023-01-02T00:00:00Z",
          "user_count": 5
        }
      },
      "RoleUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Role name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Role description"
          },
          "is_default": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Default",
            "description": "Default role for new users"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "Role active status"
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 100,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority",
            "description": "Role priority (0-100)"
          },
          "permission_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Permission Ids",
            "description": "List of permission IDs"
          }
        },
        "type": "object",
        "title": "RoleUpdate",
        "description": "Role update schema.",
        "example": {
          "description": "Updated role description",
          "name": "Senior Editor",
          "priority": 25
        }
      },
      "TokenResponse": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token",
            "description": "JWT access token"
          },
          "refresh_token": {
            "type": "string",
            "title": "Refresh Token",
            "description": "JWT refresh token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "description": "Token type",
            "default": "bearer"
          },
          "expires_in": {
            "type": "integer",
            "title": "Expires In",
            "description": "Token expiration time in seconds"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "refresh_token",
          "expires_in"
        ],
        "title": "TokenResponse",
        "description": "Token response schema.",
        "example": {
          "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...",
          "expires_in": 1800,
          "refresh_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...",
          "token_type": "bearer"
        }
      },
      "UserAdminUpdate": {
        "properties": {
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "description": "User email address"
          },
          "username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "minLength": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Username",
            "description": "Username"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name",
            "description": "First name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name",
            "description": "Last name"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone",
            "description": "Phone number"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio",
            "description": "User bio"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url",
            "description": "Avatar URL"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "User active status"
          },
          "is_verified": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Verified",
            "description": "User verification status"
          },
          "is_superuser": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Superuser",
            "description": "Superuser status"
          }
        },
        "type": "object",
        "title": "UserAdminUpdate",
        "description": "Admin user update schema.",
        "example": {
          "first_name": "John",
          "is_active": true,
          "is_superuser": false,
          "is_verified": true,
          "last_name": "Doe"
        }
      },
      "UserListResponse": {
        "properties": {
          "users": {
            "items": {
              "$ref": "#/components/schemas/UserResponse"
            },
            "type": "array",
            "title": "Users",
            "description": "List of users"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of users"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page",
            "description": "Number of users per page"
          },
          "pages": {
            "type": "integer",
            "title": "Pages",
            "description": "Total number of pages"
          }
        },
        "type": "object",
        "required": [
          "users",
          "total",
          "page",
          "per_page",
          "pages"
        ],
        "title": "UserListResponse",
        "description": "User list response schema.",
        "example": {
          "page": 1,
          "pages": 1,
          "per_page": 10,
          "total": 1,
          "users": [
            {
              "created_at": "2023-01-01T00:00:00Z",
              "display_name": "johndoe",
              "email": "user@example.com",
              "first_name": "John",
              "full_name": "John Doe",
              "id": "123e4567-e89b-12d3-a456-426614174000",
              "is_active": true,
              "is_superuser": false,
              "is_verified": true,
              "last_name": "Doe",
              "username": "johndoe"
            }
          ]
        }
      },
      "UserPermissionCheck": {
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id",
            "description": "User ID"
          },
          "permission_codename": {
            "type": "string",
            "title": "Permission Codename",
            "description": "Permission codename to check"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "permission_codename"
        ],
        "title": "UserPermissionCheck",
        "description": "User permission check schema.",
        "example": {
          "permission_codename": "user.create",
          "user_id": "123e4567-e89b-12d3-a456-426614174000"
        }
      },
      "UserPermissionResponse": {
        "properties": {
          "has_permission": {
            "type": "boolean",
            "title": "Has Permission",
            "description": "Whether user has the permission"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id",
            "description": "User ID"
          },
          "permission_codename": {
            "type": "string",
            "title": "Permission Codename",
            "description": "Permission codename"
          },
          "granted_by_roles": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Granted By Roles",
            "description": "Roles that grant this permission",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "has_permission",
          "user_id",
          "permission_codename"
        ],
        "title": "UserPermissionResponse",
        "description": "User permission check response schema.",
        "example": {
          "granted_by_roles": [
            "admin",
            "user_manager"
          ],
          "has_permission": true,
          "permission_codename": "user.create",
          "user_id": "123e4567-e89b-12d3-a456-426614174000"
        }
      },
      "UserProfileResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "User ID"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "description": "User email"
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username",
            "description": "Username"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name",
            "description": "First name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name",
            "description": "Last name"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone",
            "description": "Phone number"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio",
            "description": "User bio"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url",
            "description": "Avatar URL"
          },
          "is_verified": {
            "type": "boolean",
            "title": "Is Verified",
            "description": "Email verification status"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Account creation date"
          },
          "last_login": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Login",
            "description": "Last login timestamp"
          },
          "full_name": {
            "type": "string",
            "title": "Full Name",
            "description": "Full name"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name",
            "description": "Display name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "is_verified",
          "created_at",
          "full_name",
          "display_name"
        ],
        "title": "UserProfileResponse",
        "description": "User profile response schema.",
        "example": {
          "avatar_url": "https://example.com/avatar.jpg",
          "bio": "Software developer",
          "created_at": "2023-01-01T00:00:00Z",
          "display_name": "johndoe",
          "email": "user@example.com",
          "first_name": "John",
          "full_name": "John Doe",
          "id": "123e4567-e89b-12d3-a456-426614174000",
          "is_verified": true,
          "last_login": "2023-01-02T10:30:00Z",
          "last_name": "Doe",
          "phone": "+1234567890",
          "username": "johndoe"
        }
      },
      "UserResponse": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "description": "User email address"
          },
          "username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "minLength": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Username",
            "description": "Username"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name",
            "description": "First name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name",
            "description": "Last name"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone",
            "description": "Phone number"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio",
            "description": "User bio"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "User ID"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "User active status"
          },
          "is_verified": {
            "type": "boolean",
            "title": "Is Verified",
            "description": "User verification status"
          },
          "is_superuser": {
            "type": "boolean",
            "title": "Is Superuser",
            "description": "Superuser status"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "User creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "User update timestamp"
          },
          "last_login": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Login",
            "description": "Last login timestamp"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url",
            "description": "Avatar URL"
          },
          "full_name": {
            "type": "string",
            "title": "Full Name",
            "description": "User full name"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name",
            "description": "User display name"
          },
          "roles": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Roles",
            "description": "User role names",
            "default": []
          },
          "permissions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Permissions",
            "description": "User permission codenames",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "email",
          "id",
          "is_active",
          "is_verified",
          "is_superuser",
          "created_at",
          "full_name",
          "display_name"
        ],
        "title": "UserResponse",
        "description": "User response schema.",
        "example": {
          "avatar_url": "https://example.com/avatar.jpg",
          "bio": "Software developer",
          "created_at": "2023-01-01T00:00:00Z",
          "display_name": "johndoe",
          "email": "user@example.com",
          "first_name": "John",
          "full_name": "John Doe",
          "id": "123e4567-e89b-12d3-a456-426614174000",
          "is_active": true,
          "is_superuser": false,
          "is_verified": true,
          "last_login": "2023-01-02T10:30:00Z",
          "last_name": "Doe",
          "permissions": [
            "profile.view_own",
            "profile.update_own"
          ],
          "phone": "+1234567890",
          "roles": [
            "user",
            "editor"
          ],
          "updated_at": "2023-01-02T00:00:00Z",
          "username": "johndoe"
        }
      },
      "UserRoleAssignment": {
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id",
            "description": "User ID"
          },
          "role_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Role Ids",
            "description": "List of role IDs to assign"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "role_ids"
        ],
        "title": "UserRoleAssignment",
        "description": "User role assignment schema.",
        "example": {
          "role_ids": [
            "456e7890-e89b-12d3-a456-426614174001",
            "789e0123-e89b-12d3-a456-426614174002"
          ],
          "user_id": "123e4567-e89b-12d3-a456-426614174000"
        }
      },
      "UserUpdate": {
        "properties": {
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "description": "User email address"
          },
          "username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "minLength": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Username",
            "description": "Username"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name",
            "description": "First name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name",
            "description": "Last name"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone",
            "description": "Phone number"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio",
            "description": "User bio"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url",
            "description": "Avatar URL"
          }
        },
        "type": "object",
        "title": "UserUpdate",
        "description": "User update schema.",
        "example": {
          "avatar_url": "https://example.com/avatar.jpg",
          "bio": "Senior software developer",
          "first_name": "John",
          "last_name": "Doe",
          "phone": "+1234567890"
        }
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}