version: '3.8'

services:
  # FastAPI Application
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://fastapi_user:secure_password@db:5432/fastapi_users
      - SECRET_KEY=${SECRET_KEY:-your-super-secret-key-change-this-in-production}
      - DEBUG=${DEBUG:-False}
      - MAIL_USERNAME=${MAIL_USERNAME:-your-email@gmail.com}
      - MAIL_PASSWORD=${MAIL_PASSWORD:-your-app-password}
      - MAIL_FROM=${MAIL_FROM:-your-email@gmail.com}
      - REDIS_URL=redis://redis:6379
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - authkit-network

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=fastapi_users
      - POSTGRES_USER=fastapi_user
      - POSTGRES_PASSWORD=secure_password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fastapi_user -d fastapi_users"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - authkit-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - authkit-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/sites-available:/etc/nginx/sites-available:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - authkit-network

  # Database Migration Runner
  migrator:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    environment:
      - DATABASE_URL=postgresql+asyncpg://fastapi_user:secure_password@db:5432/fastapi_users
      - SECRET_KEY=${SECRET_KEY:-your-super-secret-key-change-this-in-production}
    depends_on:
      db:
        condition: service_healthy
    command: ["python", "-m", "alembic", "upgrade", "head"]
    restart: "no"
    networks:
      - authkit-network

  # RBAC Initializer
  rbac-init:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    environment:
      - DATABASE_URL=postgresql+asyncpg://fastapi_user:secure_password@db:5432/fastapi_users
      - SECRET_KEY=${SECRET_KEY:-your-super-secret-key-change-this-in-production}
    depends_on:
      migrator:
        condition: service_completed_successfully
    command: ["python", "scripts/init_rbac.py"]
    restart: "no"
    networks:
      - authkit-network

  # pgAdmin (Database Management)
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL:-admin@example.com}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD:-admin123}
      - PGADMIN_CONFIG_SERVER_MODE=False
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db
    restart: unless-stopped
    profiles:
      - tools
    networks:
      - authkit-network

  # Redis Commander (Redis Management)
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    restart: unless-stopped
    profiles:
      - tools
    networks:
      - authkit-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  authkit-network:
    driver: bridge
    name: authkit