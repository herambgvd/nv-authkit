"""AuthKit Setup

Revision ID: 2db0550b5622
Revises: 
Create Date: 2025-07-09 12:06:04.019623

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2db0550b5622'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('permissions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('codename', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('resource', sa.String(length=50), nullable=False),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_permissions'))
    )
    with op.batch_alter_table('permissions', schema=None) as batch_op:
        batch_op.create_index('idx_permission_is_active', ['is_active'], unique=False)
        batch_op.create_index('idx_permission_resource_action', ['resource', 'action'], unique=False)
        batch_op.create_index(batch_op.f('ix_permissions_action'), ['action'], unique=False)
        batch_op.create_index(batch_op.f('ix_permissions_codename'), ['codename'], unique=True)
        batch_op.create_index(batch_op.f('ix_permissions_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_permissions_name'), ['name'], unique=True)
        batch_op.create_index(batch_op.f('ix_permissions_resource'), ['resource'], unique=False)

    op.create_table('roles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('is_system', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_roles'))
    )
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.create_index('idx_role_is_active', ['is_active'], unique=False)
        batch_op.create_index('idx_role_is_default', ['is_default'], unique=False)
        batch_op.create_index('idx_role_is_system', ['is_system'], unique=False)
        batch_op.create_index('idx_role_name', ['name'], unique=False)
        batch_op.create_index('idx_role_priority', ['priority'], unique=False)
        batch_op.create_index(batch_op.f('ix_roles_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_roles_name'), ['name'], unique=True)

    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=True),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default='now()', nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('verification_token', sa.String(length=255), nullable=True),
    sa.Column('verification_token_expires', sa.DateTime(timezone=True), nullable=True),
    sa.Column('password_reset_token', sa.String(length=255), nullable=True),
    sa.Column('password_reset_token_expires', sa.DateTime(timezone=True), nullable=True),
    sa.Column('oauth_provider', sa.String(length=50), nullable=True),
    sa.Column('oauth_id', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index('idx_user_email', ['email'], unique=False)
        batch_op.create_index('idx_user_is_active', ['is_active'], unique=False)
        batch_op.create_index('idx_user_is_verified', ['is_verified'], unique=False)
        batch_op.create_index('idx_user_oauth_provider_id', ['oauth_provider', 'oauth_id'], unique=False)
        batch_op.create_index('idx_user_password_reset_token', ['password_reset_token'], unique=False)
        batch_op.create_index('idx_user_username', ['username'], unique=False)
        batch_op.create_index('idx_user_verification_token', ['verification_token'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('role_permissions',
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.Column('permission_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], name=op.f('fk_role_permissions_permission_id_permissions'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name=op.f('fk_role_permissions_role_id_roles'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('role_id', 'permission_id', name=op.f('pk_role_permissions'))
    )
    with op.batch_alter_table('role_permissions', schema=None) as batch_op:
        batch_op.create_index('idx_role_permissions_permission_id', ['permission_id'], unique=False)
        batch_op.create_index('idx_role_permissions_role_id', ['role_id'], unique=False)

    op.create_table('user_roles',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name=op.f('fk_user_roles_role_id_roles'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_roles_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'role_id', name=op.f('pk_user_roles'))
    )
    with op.batch_alter_table('user_roles', schema=None) as batch_op:
        batch_op.create_index('idx_user_roles_role_id', ['role_id'], unique=False)
        batch_op.create_index('idx_user_roles_user_id', ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_roles', schema=None) as batch_op:
        batch_op.drop_index('idx_user_roles_user_id')
        batch_op.drop_index('idx_user_roles_role_id')

    op.drop_table('user_roles')
    with op.batch_alter_table('role_permissions', schema=None) as batch_op:
        batch_op.drop_index('idx_role_permissions_role_id')
        batch_op.drop_index('idx_role_permissions_permission_id')

    op.drop_table('role_permissions')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_id'))
        batch_op.drop_index(batch_op.f('ix_users_email'))
        batch_op.drop_index('idx_user_verification_token')
        batch_op.drop_index('idx_user_username')
        batch_op.drop_index('idx_user_password_reset_token')
        batch_op.drop_index('idx_user_oauth_provider_id')
        batch_op.drop_index('idx_user_is_verified')
        batch_op.drop_index('idx_user_is_active')
        batch_op.drop_index('idx_user_email')

    op.drop_table('users')
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_roles_name'))
        batch_op.drop_index(batch_op.f('ix_roles_id'))
        batch_op.drop_index('idx_role_priority')
        batch_op.drop_index('idx_role_name')
        batch_op.drop_index('idx_role_is_system')
        batch_op.drop_index('idx_role_is_default')
        batch_op.drop_index('idx_role_is_active')

    op.drop_table('roles')
    with op.batch_alter_table('permissions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_permissions_resource'))
        batch_op.drop_index(batch_op.f('ix_permissions_name'))
        batch_op.drop_index(batch_op.f('ix_permissions_id'))
        batch_op.drop_index(batch_op.f('ix_permissions_codename'))
        batch_op.drop_index(batch_op.f('ix_permissions_action'))
        batch_op.drop_index('idx_permission_resource_action')
        batch_op.drop_index('idx_permission_is_active')

    op.drop_table('permissions')
    # ### end Alembic commands ###
